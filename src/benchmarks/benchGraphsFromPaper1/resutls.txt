All graphs from this paper were solved exactly:

[2019-06-21 15:30:25,9, benchGraphsFromPaper1.h:74] Results - #graphs exactly solved / #graphs: 12/12
[2019-06-21 15:30:25,9, benchGraphsFromPaper1.h:75] Largest error: 0


It happens that in multiple runs one of tham has slightly worse solution (one more cut edge comparing to exact) but it happens rarely.



[2019-06-21 15:30:25,3, benchGraphsFromPaper1.h:32] Running benchGraphsFromPaper1
[2019-06-21 15:30:25,4, benchGraphsFromPaper1.h:46]  ======================= Processing [Problem 6 (opt=5).graph.txt]
NUMCNT: 1 0
[2019-06-21 15:30:25,6, graphFaspFast2.h:641] PATH called: 134
[2019-06-21 15:30:25,6, graphFaspFast2.h:643] FASP(RAND)  capacity = 5 edgeCnt = 5 edgeList = [{18, 19}, {17, 15}, {5, 3}, {1, 2}, {13, 9}]
[2019-06-21 15:30:25,6, graphFaspFast2.h:644] Edges with cycles: []
[2019-06-21 15:30:25,6, benchGraphsFromPaper1.h:46]  ======================= Processing [Problem 1 (opt=15).graph.txt]
NUMCNT: 35 24
[2019-06-21 15:30:25,4, graphFaspFast2.h:641] PATH called: 9071
[2019-06-21 15:30:25,5, graphFaspFast2.h:643] FASP(RAND)  capacity = 15 edgeCnt = 15 edgeList = [{5, 3}, {5, 4}, {3, 2}, {1, 2}, {6, 2}, {6, 3}, {6, 1}, {6, 4}, {6, 5}, {1, 3}, {1, 4}, {1, 5}, {5, 2}, {4, 2}, {4, 3}]
[2019-06-21 15:30:25,5, graphFaspFast2.h:644] Edges with cycles: []
[2019-06-21 15:30:25,5, benchGraphsFromPaper1.h:46]  ======================= Processing [Problem 2 (opt=2).graph.txt]
NUMCNT: 1 0
[2019-06-21 15:30:25,5, graphFaspFast2.h:641] PATH called: 9130
[2019-06-21 15:30:25,5, graphFaspFast2.h:643] FASP(RAND)  capacity = 2 edgeCnt = 2 edgeList = [{4, 5}, {6, 7}]
[2019-06-21 15:30:25,5, graphFaspFast2.h:644] Edges with cycles: []
[2019-06-21 15:30:25,5, benchGraphsFromPaper1.h:46]  ======================= Processing [Subproblem 8 (opt=3).graph.txt]
NUMCNT: 2 0
[2019-06-21 15:30:25,0, graphFaspFast2.h:641] PATH called: 9596
[2019-06-21 15:30:25,0, graphFaspFast2.h:643] FASP(RAND)  capacity = 3 edgeCnt = 3 edgeList = [{22, 2}, {17, 16}, {7, 8}]
[2019-06-21 15:30:25,0, graphFaspFast2.h:644] Edges with cycles: []
[2019-06-21 15:30:25,0, benchGraphsFromPaper1.h:46]  ======================= Processing [Problem 9 (opt=8).graph.txt]
NUMCNT: 1 0
[2019-06-21 15:30:25,2, graphFaspFast2.h:641] PATH called: 9817
[2019-06-21 15:30:25,2, graphFaspFast2.h:643] FASP(RAND)  capacity = 8 edgeCnt = 8 edgeList = [{35, 34}, {31, 29}, {32, 31}, {27, 29}, {29, 30}, {28, 26}, {26, 50}, {26, 29}]
[2019-06-21 15:30:25,2, graphFaspFast2.h:644] Edges with cycles: []
[2019-06-21 15:30:25,2, benchGraphsFromPaper1.h:46]  ======================= Processing [Problem 8 (opt=5).graph.txt]
NUMCNT: 2 0
[2019-06-21 15:30:25,1, graphFaspFast2.h:641] PATH called: 11077
[2019-06-21 15:30:25,1, graphFaspFast2.h:643] FASP(RAND)  capacity = 5 edgeCnt = 5 edgeList = [{23, 1}, {17, 16}, {33, 34}, {39, 38}, {7, 8}]
[2019-06-21 15:30:25,1, graphFaspFast2.h:644] Edges with cycles: []
[2019-06-21 15:30:25,1, benchGraphsFromPaper1.h:46]  ======================= Processing [Problem 4 (opt=6).graph.txt]
NUMCNT: 1 0
[2019-06-21 15:30:25,2, graphFaspFast2.h:641] PATH called: 11158
[2019-06-21 15:30:25,2, graphFaspFast2.h:643] FASP(RAND)  capacity = 6 edgeCnt = 6 edgeList = [{18, 17}, {9, 4}, {13, 7}, {6, 2}, {6, 12}, {19, 18}]
[2019-06-21 15:30:25,2, graphFaspFast2.h:644] Edges with cycles: []
[2019-06-21 15:30:25,2, benchGraphsFromPaper1.h:46]  ======================= Processing [Problem 5 (opt=3).graph.txt]
NUMCNT: 1 0
[2019-06-21 15:30:25,3, graphFaspFast2.h:641] PATH called: 11248
[2019-06-21 15:30:25,3, graphFaspFast2.h:643] FASP(RAND)  capacity = 3 edgeCnt = 3 edgeList = [{24, 25}, {20, 1}, {17, 16}]
[2019-06-21 15:30:25,3, graphFaspFast2.h:644] Edges with cycles: []
[2019-06-21 15:30:25,3, benchGraphsFromPaper1.h:46]  ======================= Processing [Problem 10 (opt=12).graph.txt]
NUMCNT: 4 0
[2019-06-21 15:30:25,8, graphFaspFast2.h:641] PATH called: 20015
[2019-06-21 15:30:25,8, graphFaspFast2.h:643] FASP(RAND)  capacity = 12 edgeCnt = 12 edgeList = [{24, 23}, {11, 6}, {55, 54}, {95, 94}, {93, 92}, {83, 82}, {72, 71}, {73, 72}, {76, 77}, {42, 41}, {15, 14}, {36, 35}]
[2019-06-21 15:30:25,8, graphFaspFast2.h:644] Edges with cycles: []
[2019-06-21 15:30:25,8, benchGraphsFromPaper1.h:46]  ======================= Processing [Heavy water subgraph (opt=6).graph.txt]
NUMCNT: 4 0
[2019-06-21 15:30:25,2, graphFaspFast2.h:641] PATH called: 23039
[2019-06-21 15:30:25,2, graphFaspFast2.h:643] FASP(RAND)  capacity = 6 edgeCnt = 6 edgeList = [{16, 13}, {26, 25}, {45, 44}, {34, 31}, {53, 49}, {1, 20}]
[2019-06-21 15:30:25,2, graphFaspFast2.h:644] Edges with cycles: []
[2019-06-21 15:30:25,2, benchGraphsFromPaper1.h:46]  ======================= Processing [Problem 7 (opt=3).graph.txt]
NUMCNT: 1 0
[2019-06-21 15:30:25,4, graphFaspFast2.h:641] PATH called: 23199
[2019-06-21 15:30:25,4, graphFaspFast2.h:643] FASP(RAND)  capacity = 3 edgeCnt = 3 edgeList = [{28, 27}, {9, 10}, {26, 22}]
[2019-06-21 15:30:25,4, graphFaspFast2.h:644] Edges with cycles: []
[2019-06-21 15:30:25,4, benchGraphsFromPaper1.h:46]  ======================= Processing [Problem 3 (opt=6).graph.txt]
NUMCNT: 4 0
[2019-06-21 15:30:25,7, graphFaspFast2.h:641] PATH called: 24975
[2019-06-21 15:30:25,7, graphFaspFast2.h:643] FASP(RAND)  capacity = 6 edgeCnt = 6 edgeList = [{12, 13}, {3, 5}, {8, 9}, {8, 10}, {3, 4}, {11, 13}]
[2019-06-21 15:30:25,7, graphFaspFast2.h:644] Edges with cycles: []

[2019-06-21 15:30:25,9, benchGraphsFromPaper1.h:74] Results - #graphs exactly solved / #graphs: 12/12
[2019-06-21 15:30:25,9, benchGraphsFromPaper1.h:75] Largest error: 0
